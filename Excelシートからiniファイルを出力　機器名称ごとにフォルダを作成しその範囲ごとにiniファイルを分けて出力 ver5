'※デスクトップにiniフォルダを作成し機器ごとのフォルダを作成してそれぞれにiniファイルを作成する
'※※ベース設定のG列デフォルト値が空欄の場合、個別設定のH列設定値を代入する。

Const START_ROW As Long = 6 ' データ全体の開始行
Const END_ROW As Long = 20000 ' データ全体の終了行
'Const CHARSET_UTF8 As String = "UTF-8" ' UTF-8文字セットの定数
'Const LINE_SEPARATOR_CRLF As Long = -1 ' 改行コードの定数

Sub ArtINI()
    '★Step1 変数初期化
    Dim lastRow As Long ' 最終行の変数
    Dim startRow As Long ' 機器名称の開始行
    Dim endRow As Long ' 機器名称の終了行
    Dim FolderPath As String ' フォルダパスの変数
    Dim currentEquipment As String ' 現在の機器名称の変数
    Dim sanitizedEquipment As String ' (文字列の規則)サニタイズされた機器名称の変数
    Dim rng As Range ' 範囲オブジェクト
    Dim cell As Range ' セルオブジェクト
    Dim sections() As String ' セクションを格納する配列
    Dim keys() As String ' キーを格納する配列
    Dim values() As String ' 値を格納する配列
    Dim sectionCount As Long ' セクション数のカウント
    Dim filePath As String ' ファイルパスの変数
    Dim iniFile As String ' iniファイルの名前
    Dim FileNum As Integer ' ファイル番号の変数
    
    '★Step2「ベース設定」シートと「個別設定」シートを設定し、処理を開始する行と機器名称を初期化
    ' シートの設定
    Dim WS As Worksheet ' ベース設定シート用のワークシートオブジェクト
    Set WS = ThisWorkbook.Worksheets("ベース設定") ' ベース設定シートを設定
    Dim Sh As Worksheet ' 個別設定シート用のワークシートオブジェクト
    Set Sh = ThisWorkbook.Worksheets("個別設定") ' 個別設定シートを設定

    ' 最初の機器名称の開始行と終了行、機器名称の初期値を指定
    startRow = 6 ' 開始行を設定
    endRow = 196 ' 終了行を設定
    currentEquipment = "メイン卓A(画A/C)" ' 初期の機器名称を設定
    
    '★Step3 メインループ
    Do While startRow <= 3061 ' 指定行までループ
        '★Step3-1 フォルダとファイルの準備
        ' 機器名称のスラッシュを全角スラッシュに置換　※サニタイズ(文字列ルール)
        sanitizedEquipment = Replace(currentEquipment, "/", "／")
        
        'デスクトップにiniフォルダを作りその中に機器名称ごとのフォルダを出力　更に各フォルダにiniファイルを作成
        FolderPath = "C:\Users\swp\Desktop\ini\" & sanitizedEquipment ' フォルダパスを設定
        CreateFolderRecursively FolderPath ' フォルダを作成
        
        '★Step3-2 データ範囲とデータの設定
        ' 個別設定シートの機器名称ごとの開始セルと終了セルを取得
        Set rng = Sh.Range("B" & startRow & ":B" & endRow) ' 範囲を設定
        
        ' 配列の初期化
        sectionCount = 0
        ReDim sections(0)
        ReDim keys(0)
        ReDim values(0)
        
        ' 各行を処理
        For Each cell In rng ' 範囲内の各セルを処理
            Dim classification As String ' 分類の変数
            Dim section As String ' セクションの変数
            Dim key As String ' キーの変数
            Dim value As String ' 値の変数
            Dim baseValue As String ' ベース値の変数
            Dim outputValue As String ' 出力値の変数
            
            classification = Sh.Cells(cell.Row, 3).value ' C列の値を取得
            section = Sh.Cells(cell.Row, 5).value ' E列の値を取得
            key = Sh.Cells(cell.Row, 6).value ' F列の値を取得
            value = Sh.Cells(cell.Row, 8).value ' H列の値を取得
            
            '★Step3-3 設定値が空の場合はベース設定シートから取得
            If value = "" Then ' 値が空の場合
                If WS.Cells(cell.Row, 7) = "" Then ' ベース設定シートのG列が空欄の場合
                    outputValue = Sh.Cells(cell.Row, 8).value ' 個別設定シートのH列の値を使用
                Else
                    outputValue = WS.Cells(cell.Row, 7).value ' ベース設定シートのG列の値を使用
                End If
            Else
                outputValue = value ' 値がある場合はそのまま出力値を設定
            End If

            ' 配列にセクション、キー、値を追加
            sectionCount = sectionCount + 1
            ReDim Preserve sections(sectionCount)
            ReDim Preserve keys(sectionCount)
            ReDim Preserve values(sectionCount)
            sections(sectionCount) = section
            keys(sectionCount) = key
            values(sectionCount) = outputValue
        Next cell

        '★Step3-4 iniファイルを作成
        filePath = FolderPath & "\ArtSendTerm.ini" ' ファイルパスを設定
        FileNum = FreeFile ' ファイル番号を取得
        Open filePath For Output As #FileNum ' ファイルをオープン
        
        ' 配列の内容をiniファイルに書き込む
        Dim i As Long
        For i = 1 To sectionCount
            Print #FileNum, "[" & sections(i) & "]" ' セクションを書き込む
            Print #FileNum, keys(i) & " = " & values(i) ' キーと値を書き込む
        Next i
        
        Close #FileNum ' ファイルを閉じる
        
        '★Step3-5 次の範囲に移動
        startRow = endRow + 1
        endRow = endRow + 191
        currentEquipment = GetNextEquipmentName(startRow) ' 次の機器名称を取得する関数を呼び出す
    Loop ' ループの終了
    
    Dim outputPath As String
    outputPath = "C:\Users\swp\Desktop\ini" 'デスクトップに親フォルダのiniフォルダを作成
    
    CreateObject("WScript.Shell").Run outputPath   '保存したiniフォルダを開く
End Sub

'★行の範囲から機器名称を取得する関数
Function GetNextEquipmentName(startRow As Long) As String
    If startRow >= 6 And startRow <= 196 Then
        GetNextEquipmentName = "メイン卓A(画A)"
    ElseIf startRow >= 197 And startRow <= 387 Then
        GetNextEquipmentName = "メイン卓A(画B)"
    ElseIf startRow >= 388 And startRow <= 578 Then
        GetNextEquipmentName = "メイン卓A(画D)"
    ElseIf startRow >= 579 And startRow <= 769 Then
        GetNextEquipmentName = "メイン卓B(画A/C)"
    ElseIf startRow >= 770 And startRow <= 960 Then
        GetNextEquipmentName = "メイン卓B(画B)"
    ElseIf startRow >= 961 And startRow <= 1151 Then
        GetNextEquipmentName = "メイン卓B(画D)"
    ElseIf startRow >= 1152 And startRow <= 1342 Then
        GetNextEquipmentName = "メイン卓C(画A/C)"
    ElseIf startRow >= 1343 And startRow <= 1533 Then
        GetNextEquipmentName = "メイン卓C(画B)"
    ElseIf startRow >= 1534 And startRow <= 1724 Then
        GetNextEquipmentName = "メイン卓C(画D)"
    ElseIf startRow >= 1725 And startRow <= 1915 Then
        GetNextEquipmentName = "メイン卓D(画A/C)"
    ElseIf startRow >= 1916 And startRow <= 2106 Then
        GetNextEquipmentName = "メイン卓D(画B)"
    ElseIf startRow >= 2107 And startRow <= 2297 Then
        GetNextEquipmentName = "メイン卓D(画D)"
    ElseIf startRow >= 2298 And startRow <= 2488 Then
        GetNextEquipmentName = "メイン卓E(画A/C)"
    ElseIf startRow >= 2489 And startRow <= 2679 Then
        GetNextEquipmentName = "メイン卓E(画B)"
    ElseIf startRow >= 2680 And startRow <= 2870 Then
        GetNextEquipmentName = "メイン卓E(画D)"
    ElseIf startRow >= 2871 And startRow <= 3061 Then
        GetNextEquipmentName = "メイン卓WN1(画A/C)"
    End If
End Function

'★機器ごとのフォルダを作成するサブルーチン 親フォルダiniが存在しない場合、親フォルダiniも含めて再生成。
Sub CreateFolderRecursively(FolderPath As String)
    Dim fs As Object
    Dim parentFolder As String

    ' FileSystemObjectの作成
    Set fs = CreateObject("Scripting.FileSystemObject")
    
    ' 機器ごとのフォルダが存在しない場合
    If Not fs.FolderExists(FolderPath) Then
        ' 親フォルダiniのパスを取得
        parentFolder = fs.GetParentFolderName(FolderPath)
        
        ' 親フォルダiniが存在しない場合、再帰的にiniフォルダを作成
        If Not fs.FolderExists(parentFolder) Then
            CreateFolderRecursively parentFolder
        End If
        
        ' 機器ごとのフォルダを作成
        fs.CreateFolder FolderPath
    End If
End Sub

'全体の流れ
'ステップごとの処理
'Step1: 変数初期化
'必要な変数を宣言します｡これには､最終行､開始行､終了行､フォルダパス､機器名称などが含まれます｡

'Step2: シート設定と初期化
'「ベース設定」シートと「個別設定」シートを設定し、処理を開始する行や機器名称を初期化します。

'Step3: メインループ
'startRow が 3061 以下である限りループを続けます。各機器名称に対して、フォルダを作成し、その中にINIファイルを生成します。
'Step3-1: フォルダとファイルの準備
'機器名称のスラッシュを全角スラッシュに置換し､指定のパスにフォルダを作成します｡
'Step3-2: データ範囲とデータの設定
'「個別設定」シートから指定範囲のデータを取得し、各行の分類、セクション、キー、値を処理します。
'Step3-3: 設定値が空の場合の処理
'設定値が空の場合は、「ベース設定」シートから値を取得します。値が設定されていれば、その値を使用します。
'Step3-4: INIファイルの作成
'取得したデータを元にINIファイルを作成し､指定のパスに保存します｡
'Step3-5: 次の範囲に移動
'次の機器名称とデータ範囲を設定し､次のループに備えます｡
'GetNextEquipmentName関数
'指定された開始行 (startRow) に基づき、適切な機器名称を返します。これは、行数に応じて機器名称を決定するための関数です。
'CreateFolderRecursivelyサブルーチン
'指定されたフォルダパスが存在しない場合､その親フォルダも含めて再帰的にフォルダを作成します｡これにより､必要な全てのフォルダを確実に作成します｡

'全体の処理の概要
'シートからデータを取得し､機器ごとの設定を行う:
'各機器の設定データを個別設定シートから取得し､適切な形式でINIファイルに書き込みます｡
'INIファイルを作成するためのフォルダ構造を管理する:
'デスクトップ上の指定されたパスに､機器ごとのフォルダを作成し､その中にINIファイルを生成します｡
