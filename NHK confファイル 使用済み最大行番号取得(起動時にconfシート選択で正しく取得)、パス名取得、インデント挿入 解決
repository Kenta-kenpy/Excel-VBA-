'Module13で解決済み：使用済み最大行番号取得(起動時にconfシート選択で正しく取得)、パス名取得、インデント挿入
'空行の出力(シートのセルには影響させない)
'If文の条件判定に使うのはB列のみ C列の値は変化することを考慮
'次の問題：HTMLのタグ挿入

Sub CONF出力()
    '★step1 confシート
    Dim Sheet_conf As Worksheet
    Dim Sheet_set As Worksheet
    
    '設定シートとconfシートをセット
    Set Sheet_conf = ThisWorkbook.Worksheets("conf")
    Set Sheet_set = ThisWorkbook.Worksheets("設定")
    '起動時にconfシートが選択されるようにする
    Sheet_conf.Activate
    
    '列の幅を自動調整
    Sheet_conf.Range("B1:C1").EntireColumn.AutoFit
    Dim saveFileName As String '保存ファイル名
    Dim saveFolder As String '保存場所パス
    'confシートのC1セルから保存ファイル名を取得
    saveFileName = Sheet_conf.Range("C1").Value
    '設定シートのB1セルから保存場所を取得
    saveFolder = Sheet_set.Range("B1").Value
    '----------------------------------------------------------------------------------------------------

    '★step2 confシートのデータの読み込み ※B1セルを除く
    '★列の使用済みセルの最大行番号を求める処理に用いる変数宣言
    '----- シートのセルを縦方向に見た場合　使用済みセルの最大行番号を求める
    '列の最終行を取得する必要がある
    ' B列の最終行を取得
    Dim endRow As Long
    ' B1セルを起点として最終行番号を取得(下に向かって)
    endRow = Sheet_conf.Range("B1").End(xlDown).Row
    MsgBox ("B列の最終行番号" & endRow)

    Dim countRow_B As Integer '行数数える
    '見出し1行を除外したセル範囲B列選択
    Sheet_conf.Range("B1").Resize(Range("B1").CurrentRegion.Rows.Count - 1, Range("B1").Columns.Count).Offset(1, 0).Select
    countRow_B = Application.WorksheetFunction.CountA(Sheet_conf.Columns(2)) 'セル範囲の行数を数える
    MsgBox ("B列データ行数は" & countRow_B - 1) '←データ行数を取得

    '----------------------------------------------------------------------------------------------------

    '★step3 confシートのデータの読み込みとファイル出力
    '★step3-1　フォルダ名とファイル名をセルから取得
    '保存フォルダ名のチェック
    If Not IsNull(saveFolder) Then  '出力ファイルが指定された場合
        MsgBox ("フォルダ名" & saveFolder & "を確認しました")
    Else '未入力またはキャンセル時
        Application.Goto Sheet_set.Range("B1"), True  '設定シートB1セルにカーソルが合っている状態
        MsgBox ("設定シートのB1セルに保存フォルダ名が入力されていません"), vbCritical  '警告メッセージアイコン"
        Exit Sub
    End If
    
    '保存ファイル名のチェック
    If Not IsNull(saveFileName) Then  '出力ファイルが指定された場合
        MsgBox ("ファイル名" & saveFileName & "を確認しました")
    Else '未入力またはキャンセル時
        Application.Goto Sheet_conf.Range("C1"), True  'confシートC1セルにカーソルが合っている状態
        MsgBox ("confシートのB1セルに保存シート名が入力されていません"), vbCritical  '警告メッセージアイコン
        Exit Sub
    End If

    '★step3-2　名前を付けて保存ダイアログボックスを使わないファイル保存
    'ファイル書き込みより前にファイル名など指定
    '保存パス全体を文字列結合で作成 '_td_agentまで含めたファイル名にする
    saveFileName = saveFileName & "_td_agent"
    Dim savepath As String
    '保存パス全体 拡張子も文字列結合
    savepath = saveFolder & "\" & saveFileName & ".conf" 'フォルダ名\ファイル名_td_agent.conf として保存
    
    '★step3-3 HTMLタグのテキスト出力 セルには表示しない
    '空のファイル番号取得
    Dim FileNum As Long
    FileNum = FreeFile
    
    '★step3-4　ファイル書き込み工程(拡張子指定)
    'どうやったらB列とC列のデータを分割した状態で出力できるか
    Dim CellValB As String
    Dim CellValC As String
    Dim Ind As String 'インデントの挿入(A列の利用)
    Dim i As Long
    
    '*** 書き込み工程 開始*** ◆◆◆
    'ファイルを開く
    Open savepath For Output As #FileNum
        For i = 2 To endRow '2行目からデータ範囲まで
            CellValA = Sheet_conf.Cells(i, 1).Value 'A列の値(インデント)
            CellValB = Sheet_conf.Cells(i, 2).Value 'B列の値
            CellValC = Sheet_conf.Cells(i, 3).Value 'C列の値
            '★step3-4-1　A列の値を取得してインデントの挿入
            'String関数の構文:String(length, character) 、lengthは生成する文字列の長さを指定しCharacterは繰り返される文字を指定。
            'Sheet_conf.Cells(i, 1).Valueが length に相当し、A 列の値の数だけスペースを生成される。
            'https://officedic.com/excel-vba-howto-stringfunction/
            Ind = String(CellValA, " ") 'インデント生成
            'B列とC列のデータをインデントとともに出力
            Print #FileNum, Ind & CellValB & " " & CellValC 'B列とC列の間には空白区切り
            
            '★step3-4-2  タイミングごとの空行挿入
            'B列の値が "path" または "host" のとき次の行に空行を挿入
            'ただし　シート上では空行を挿入せずあくまでもファイル出力の時のみ
            If CellValB = "path" Or CellValB = "host" Then
                Print #FileNum, "" '空行を挿入
            End If
        Next i
    Close #FileNum 'ファイルを閉じる
    '*** 書き込み工程 終了*** ◆◆◆
    
    '保存先フォルダを開く
    Dim save As String
    save = InStrRev(savepath, "\")
    saveFolder = Left(savepath, save - 1)
    CreateObject("WScript.Shell").Run saveFolder
End Sub
