'※実行のたびにiniファイル/iniフォルダ/機器ごとのフォルダの日時も合わせて更新
'デスクトップにiniフォルダを作成しその中に機器名称ごとのフォルダを作りiniファイルを出力させるものとする。
'ベース設定のG列デフォルト値が空欄の場合、個別設定のH列設定値を代入する。
'※機器においてSectionが変わるごとに見やすくするため空行を挿入

Sub ArtINI()
    '★Step1 変数初期化
    Dim lastRow As Long ' 最終行の変数
    Dim startRow As Long ' 機器名称の開始行
    Dim endRow As Long ' 機器名称の終了行
    Dim FolderPath As String ' フォルダパスの変数
    Dim currentEquipment As String ' 現在の機器名称の変数
    Dim sanitizedEquipment As String ' (文字列の規則)サニタイズされた機器名称の変数
    Dim rng As Range ' 範囲オブジェクト
    Dim cell As Range ' セルオブジェクト
    Dim dict As Object ' Dictionaryオブジェクト
    Dim filePath As String ' ファイルパスの変数
    Dim iniFile As String ' iniファイルの名前
    Dim fs As Object ' FileSystemオブジェクト
    Dim ts As Object ' TextStreamオブジェクト

    '★Step2「ベース設定」シートと「個別設定」シートを設定し、処理を開始する行と機器名称を初期化
    Dim WS As Worksheet ' ベース設定シート用のワークシートオブジェクト
    Set WS = ThisWorkbook.Worksheets("ベース設定") ' ベース設定シートを設定
    Dim Sh As Worksheet ' 個別設定シート用のワークシートオブジェクト
    Set Sh = ThisWorkbook.Worksheets("個別設定") ' 個別設定シートを設定

    ' FileSystemObjectの作成
    Set fs = CreateObject("Scripting.FileSystemObject")

    ' 最初の機器名称の開始行と終了行、機器名称の初期値を指定
    startRow = 6 ' 開始行を設定
    endRow = 196 ' 終了行を設定
    currentEquipment = "メイン卓A(画A/C)" ' 初期の機器名称を設定

    '★Step3 メインループ
    Do While startRow <= 3061 ' 指定行までループ
        ' 機器名称のスラッシュを全角スラッシュに置換　※サニタイズ
        sanitizedEquipment = Replace(currentEquipment, "/", "／")
        ' デスクトップにiniフォルダを作り、その中に機器名称ごとのフォルダを出力
        FolderPath = "C:\Users\swp\Desktop\ini\" & sanitizedEquipment

        ' 既存のフォルダを削除してから新しいフォルダを作成
        If fs.FolderExists(FolderPath) Then
            DeleteFolderRecursively FolderPath
        End If
        CreateFolderRecursively FolderPath ' フォルダを作成

        ' 個別設定シートの機器名称ごとの開始セルと終了セルを取得
        Set rng = Sh.Range("B" & startRow & ":B" & endRow)
        ReDim sections(1 To rng.Rows.Count, 1 To 3) ' セクション情報を格納する配列を初期化

        Dim rowIndex As Long
        rowIndex = 1 ' 行インデックスの初期化
        
        ' 各行を処理
        For Each cell In rng
            Dim classification As String ' 分類の変数
            Dim section As Variant ' セクションの変数
            Dim key As String ' キーの変数
            Dim value As String ' 値の変数
            Dim outputValue As String ' 出力値の変数

            ' 各セルの値を取得
            classification = Sh.Cells(cell.Row, 3).value ' C列の値を取得
            section = Sh.Cells(cell.Row, 5).value ' E列の値を取得
            key = Sh.Cells(cell.Row, 6).value ' F列の値を取得
            value = Sh.Cells(cell.Row, 8).value ' H列の値を取得
            
            ' ベース設定シートのデフォルト値が空欄の場合、個別設定シートの設定値を代入
            If value = "" Then ' 値が空の場合
                If WS.Cells(cell.Row, 7).value = "" Then ' ベース設定シートのG列が空欄の場合
                    outputValue = Sh.Cells(cell.Row, 8).value ' 個別設定シートのH列の値を使用
                Else
                    outputValue = WS.Cells(cell.Row, 7).value ' ベース設定シートのG列の値を使用
                End If
            Else
                outputValue = value ' 値がある場合はそのまま出力値を設定
            End If

            ' セクション情報を配列に格納
            sections(rowIndex, 1) = section
            sections(rowIndex, 2) = key
            sections(rowIndex, 3) = outputValue
            rowIndex = rowIndex + 1 ' 行インデックスを更新
        Next cell

        ' iniファイルを作成
        filePath = FolderPath & "\ArtSendTerm.ini" ' ファイルパスを設定
        Set ts = fs.CreateTextFile(filePath, True) ' テキストファイルを作成

        Dim i As Long
        Dim currentSection As String
        currentSection = ""
        For i = 1 To UBound(sections, 1)
            ' セクションの開始を記述
            If sections(i, 1) <> currentSection Then
                ' セクションが変わる場合は、前のセクションの後に空行を挿入
                If currentSection <> "" Then
                    ts.WriteLine ' 空行を追加
                End If
                currentSection = sections(i, 1)
                ts.WriteLine "[" & currentSection & "]"
            End If
            ' キーと値を記述
            ts.WriteLine sections(i, 2) & " = " & sections(i, 3)
        Next i
        ts.Close ' ファイルを閉じる
        
        ' 次の範囲に移動
        startRow = endRow + 1 ' 開始行を更新
        endRow = endRow + 191 ' 終了行を更新
        currentEquipment = GetNextEquipmentName(startRow) ' 次の機器名称を取得する関数を呼び出す
    Loop

    Dim outputPath As String
    ' デスクトップにiniフォルダを作成
    outputPath = "C:\Users\swp\Desktop\ini"
    CreateObject("WScript.Shell").Run outputPath ' 保存したiniフォルダを開く
End Sub

' フォルダとその中身を削除するサブルーチン
Sub DeleteFolderRecursively(FolderPath As String)
    Dim fs As Object
    Dim folder As Object
    Dim subFolder As Object
    Dim file As Object

    Set fs = CreateObject("Scripting.FileSystemObject")
    If fs.FolderExists(FolderPath) Then
        Set folder = fs.GetFolder(FolderPath)
        For Each file In folder.Files
            file.Delete ' ファイルを削除
        Next file
        For Each subFolder In folder.SubFolders
            DeleteFolderRecursively subFolder.Path ' サブフォルダを再帰的に削除
        Next subFolder
        folder.Delete ' フォルダを削除
    End If
End Sub

'★機器ごとのフォルダ作成関数 親フォルダが存在しない場合、親フォルダも含めて作成
Sub CreateFolderRecursively(FolderPath As String)
    Dim fs As Object ' FileSystemObject
    Dim parentFolder As String ' 親フォルダのパス
    
    Set fs = CreateObject("Scripting.FileSystemObject") ' FileSystemObjectを作成
    If Not fs.FolderExists(FolderPath) Then ' フォルダが存在しない場合
        parentFolder = fs.GetParentFolderName(FolderPath) ' 親フォルダのパスを取得
        If Not fs.FolderExists(parentFolder) Then ' 親フォルダが存在しない場合
            CreateFolderRecursively parentFolder ' 親フォルダを作成
        End If
        fs.CreateFolder FolderPath ' 指定のフォルダを作成
    End If
End Sub

'★行の範囲から機器名称を取得する関数
Function GetNextEquipmentName(startRow As Long) As String
    If startRow >= 6 And startRow <= 196 Then
        GetNextEquipmentName = "メイン卓A(画A)"
    ElseIf startRow >= 197 And startRow <= 387 Then
        GetNextEquipmentName = "メイン卓A(画B)"
    ElseIf startRow >= 388 And startRow <= 578 Then
        GetNextEquipmentName = "メイン卓A(画D)"
    ElseIf startRow >= 579 And startRow <= 769 Then
        GetNextEquipmentName = "メイン卓B(画A/C)"
    ElseIf startRow >= 770 And startRow <= 960 Then
        GetNextEquipmentName = "メイン卓B(画B)"
    ElseIf startRow >= 961 And startRow <= 1151 Then
        GetNextEquipmentName = "メイン卓B(画D)"
    ElseIf startRow >= 1152 And startRow <= 1342 Then
        GetNextEquipmentName = "メイン卓C(画A/C)"
    ElseIf startRow >= 1343 And startRow <= 1533 Then
        GetNextEquipmentName = "メイン卓C(画B)"
    ElseIf startRow >= 1534 And startRow <= 1724 Then
        GetNextEquipmentName = "メイン卓C(画D)"
    ElseIf startRow >= 1725 And startRow <= 1915 Then
        GetNextEquipmentName = "メイン卓D(画A/C)"
    ElseIf startRow >= 1916 And startRow <= 2106 Then
        GetNextEquipmentName = "メイン卓D(画B)"
    ElseIf startRow >= 2107 And startRow <= 2297 Then
        GetNextEquipmentName = "メイン卓D(画D)"
    ElseIf startRow >= 2298 And startRow <= 2488 Then
        GetNextEquipmentName = "メイン卓E(画A/C)"
    ElseIf startRow >= 2489 And startRow <= 2679 Then
        GetNextEquipmentName = "メイン卓E(画B)"
    ElseIf startRow >= 2680 And startRow <= 2870 Then
        GetNextEquipmentName = "メイン卓E(画D)"
    ElseIf startRow >= 2871 And startRow <= 3061 Then
        GetNextEquipmentName = "メイン卓WN1(画A/C)"
    End If
End Function

<変数の初期化>
lastRow, startRow, endRow: 行の範囲を定義するための変数。
FolderPath: フォルダのパスを格納する変数。
currentEquipment, sanitizedEquipment: 現在の機器名称とサニタイズされた機器名称を格納する変数。
rng, cell: 範囲オブジェクトとセルオブジェクト。
dict, filePath, iniFile, fs, ts: Dictionaryオブジェクト、ファイルパス、iniファイル名、FileSystemオブジェクト、TextStreamオブジェクト。

<シートとFileSystemObjectの設定>
WS, Sh: 「ベース設定」シートと「個別設定」シートを設定。
fs: FileSystemObjectを作成し、フォルダ操作を行うために使用。

<メインループ>
startRowからendRowまでの範囲で、currentEquipmentの機器名称に基づいてINIファイルを生成します。
sanitizedEquipment: 機器名称のスラッシュを全角スラッシュに置換して、フォルダ名に使用。
フォルダを削除してから新しく作成します。

<個別設定シートのデータ処理>
rng: 個別設定シートの範囲を指定。
sections: セクション情報を格納する配列。
各行のデータを読み取り、出力値を設定します。ベース設定シートのデフォルト値が空欄の場合、個別設定シートの値を使用します。

<INIファイルの作成>
filePath: INIファイルの保存パス。
ts: テキストストリームを作成し、セクションの開始とキーと値を書き込みます。

<次の範囲に移動>
startRowとendRowを更新して次の機器名称のデータ処理に進みます。
GetNextEquipmentName: 次の機器名称を決定する関数を呼び出します。

<フォルダを開く>
デスクトップ上に作成されたINIフォルダを開きます。

<補助サブルーチンと関数>
DeleteFolderRecursively: 指定されたフォルダとその中身を再帰的に削除します。
CreateFolderRecursively: 指定されたフォルダとその親フォルダが存在しない場合に、親フォルダを含めて再帰的に作成します。
GetNextEquipmentName: startRowの値に基づいて次の機器名称を返す関数です。

<全体の流れ>
変数とオブジェクトを初期化し、シートとFileSystemObjectを設定します。
メインループで、指定された範囲のデータを処理してINIファイルを作成します。
フォルダとファイルの作成、削除を行い、最終的に作成されたINIフォルダを開きます。
