'※空行対応版
'マクロの概要
'1.ExcelSheet上のセルのうち入力されたデータがある使用済みセルの最大行数と最大列数を求める
'2.1の処理ののちシート全体をCSV形式で出力する
'→「名前を付けて保存ダイアログ」を用いてCSV形式で保存する

'出力の仕方の注意
'1.シート上の全てのデータが出力されること 漏れがないこと
'2.データがない行について空行として出力
'3.空行を上に詰めない
'4.行の中でデータとデータの間の空白セルについては区切りカンマで表す
'5.行ごとの行末データ以降は「最大のデータ数の行の列数ぶん」のカンマを表示しない
'6.行および列の番号最大値を求める際にWorkSheet関数を使わない方法を使う


'変数一覧
'csvSh 今回のワークシート
'i 行のインデックス
'RowCount()行ごとのどこまでの列を使っているかを格納する配列
'lastCol 行を見たときに何列目までデータが入っているか
'max_retu データが入っているセルの使用する列番号最大値
'j 列のインデックス
'ColCount()列ごとのどこまでの行を使っているかを格納する配列
'lastRow 列を見たときに何行目までデータが入っているか
'max_gyou データが入っているセルの使用する行番号最大値
'outputFile csvファイルの保存先
'FreeFile ファイル出力においてOSでファイルを一元管理するための仕組み　ファイル番号が他と重複しないように空ファイル番号を自動取得
'csvVal 今回のワークシートのi行j列のセルの値　csvSh.Cells(i, j).Value

'定数 CSVに出力する上でのデータ検索範囲
Const MAX_COL As Long = 300  '列数　データの検索範囲タテ方向　右へ
Const MAX_ROW As Long = 300 '行数　データの検索範囲ヨコ方向　下へ

Sub Cell_Count()
'----- ワークシートのうちcsvファイルに変換するシートの名前を入力して指定　もし存在しないシート名を指定したら「シート名を入力してください」とメッセージが出て抜ける -----
'----- もしシートがあれば「シート〇〇が選ばれました」とメッセージを表示
    ' データが格納されたセルの末尾の列番号・行番号をお知らせ
    MsgBox ("データが格納されたセルの末尾の" & vbCrLf & "列番号・行番号をお知らせ") 'vbCrLfはメッセージボックスの改行
    ' シート名
    'ブックの中で変換したいシート名を選択して入力
    Dim csvSh As Worksheet
    Dim S As String
    S = InputBox("このブックのcsvに変換したいシート名を指定")
    ' シート名の入力がなかった場合の処理
    If S = "" Then
        MsgBox ("シート名を入力してください")
        Exit Sub  '抜ける
    End If
    '入力された場合かつシートが存在する場合の処理
    MsgBox ("シート" & S & "が選ばれました")
    
'----- シートのセルを横方向に見た場合　使用済みセルの最大列数を求める
    ' ヨコ方向のセルについて　末尾データの列の場所を求める
    'MsgBox ("※セルを右に向かって見ています")
    MsgBox ("行の使用済みセル最大列番号を求めます")
    'csvShに入力されたシート名Sをセット
    Set csvSh = ThisWorkbook.Worksheets(S)
'----- 行に関して使用済みセルの最大列番号を格納する配列
    ' 行ごとのどこまでの列を使っているかを格納する配列RowCountを初期化
    Dim RowCount() As Long
    ReDim RowCount(1 To MAX_ROW) As Long
'----- 行の先頭セルにデータがないときの行の使用済みデータ数に関する処理
    ' 行の数 i
    Dim i As Long
    For i = 1 To MAX_ROW
        ' 各行の最終列を取得
        Dim lastCol As Long
        ' シートのセルを左に向かってみたときどのセルまで使われているか
        lastCol = csvSh.Cells(i, csvSh.Columns.Count).End(xlToLeft).Column
        ' 先頭行データが設定されているかいないか
        If lastCol = 1 And IsEmpty(csvSh.Cells(i, 1).Value) Then
            RowCount(i) = 0
        Else
            RowCount(i) = lastCol
        End If
    Next i

'----- 使用済みセルの列番号最大値を求める
'-----「各行の使用済みセル列の末尾列」のセルに格納されている値の配列の要素最大値を求める
    Dim max_retu As Long
    '「各行の使用済みセル列の末尾列」のセルに格納されている値の配列
    'step1 配列の先頭要素を最大値の初期値とする
    max_retu = RowCount(1)
    'step2 配列ループ
    For i = LBound(RowCount) To UBound(RowCount)
        'step3 要素大小比較
        If RowCount(i) > max_retu Then
            'step4 配列の隣接2要素について　左の要素が右の要素より大きければ入れ替えて最大値に代入
            max_retu = RowCount(i)
        End If
    Next i
    MsgBox ("データが入っているセルの使用する列番号最大値は" & vbCrLf & max_retu & " です")  'vbCrLfはメッセージボックスの改行
    
    '--------------------------------------------------------------------------------
'----- シートのセルを縦方向に見た場合　使用済みセルの最大行数を求める
    ' タテ方向のセルについて　末尾データの行の場所を求める
    MsgBox ("つづきまして　列の使用済みセル最大行番号を求めます")
    'MsgBox ("※セルを下に向かって見ています")
'----- 列に関して使用済みセルの最大行番号を格納する配列
    ' 列ごとのどこまでの行を使っているかを格納する配列ColCountを初期化
    Dim ColCount() As Long
    ReDim ColCount(1 To MAX_COL) As Long
'----- 列の先頭セルにデータがないときの列の使用済みデータ数に関する処理
    ' 列の数 j
    Dim j As Long
    For j = 1 To MAX_COL
        ' 各列の最終行を取得
        Dim lastRow As Long
        ' シートのセルを上に向かってみたときどのセルまで使われているか
        lastRow = csvSh.Cells(csvSh.Rows.Count, j).End(xlUp).Row
        ' 先頭列データが設定されているかいないか
        If lastRow = 1 And IsEmpty(csvSh.Cells(1, j).Value) Then
            ColCount(j) = 0
        Else
            ColCount(j) = lastRow
        End If
    Next j
    
'----- 使用済みセルの行番号最大値を求める
'-----「各列の使用済みセル行の末尾列」のセルに格納されている値の配列の要素最大値を求める
    Dim max_gyou As Long
    '「各列の使用済みセル行の末尾行」のセルに格納されている値の配列
    'step1 配列の先頭要素を最大値の初期値とする
    max_gyou = ColCount(1)
    'step2 配列ループ
    For j = LBound(ColCount) To UBound(ColCount)
        'step3 要素大小比較
        If ColCount(j) > max_gyou Then
            'step4 配列の隣接2要素について　左の要素が右の要素より大きければ入れ替えて最大値に代入
            max_gyou = ColCount(j)
        End If
    Next j
    MsgBox ("データが入っているセルの使用する行番号最大値は" & vbCrLf & max_gyou & " です") 'vbCrLfはメッセージボックスの改行
    
    '--------------------------------------------------------------------------------
'----- 使用済みセルの列番号最大値と行番号最大値が求まったのでシートをCSVに変換する
    MsgBox ("シートCSV変換を開始します")
'----- 出力するCSVファイルおよび名前を付けて保存で「csv形式」で保存するためのダイアログボックス
    ' CSVファイルの保存先を指定
    Dim outputFile As String
    '名前を付けて保存ダイアログボックス
    'ファイル名、保存フォルダ、ファイル保存形式を選べるように
    'outputFile = Application.Dialogs(xlDialogSaveAs).Show
    outputFile = Application.GetSaveAsFilename(FileFilter:="csvファイル,*.csv")  'csv形式で保存するため
'----- ファイル出力においてOSでファイルを一元管理するための仕組み　ファイルを扱う際にァイル番号が他と重複しないようにFreeFile関数を使うことで未使用番号(空ファイル番号)を自動で取得する
    ' 空ファイル番号を取得
    Dim csvNum As Long
    csvNum = FreeFile
'----- 上述のcsvファイルをファイル番号csvNumとして開く
    ' CSVファイルを書き込みモードで開く
    Open outputFile For Output As #csvNum
'----- セルの座標データを取得しファイルに書き込み
    ' 行方向要素数分ループ ' 行ごとのどこまでの列を使っているか
        For i = 1 To max_gyou
        ' 列方向要素数分ループ ' 列ごとのどこまでの行を使っているか
        '1行目のときは行ごとの列末尾配列の1番目の要素、2行目のときは2番目の要素を取り出す
        For j = 1 To RowCount(i)
            'セル座標のデータをcsvValとして取得
            Dim csvVal As String
            ' セルの値を定義
            csvVal = csvSh.Cells(i, j).Value
            If j = RowCount(i) Then
                ' 最終列の場合、デフォルトで改行コードが付与
                Print #csvNum, csvVal
            Else
                ' 最終列でない場合、コンマ刻みで末尾にセミコロン付与
                Print #csvNum, csvVal & ",";
            End If
        Next j
'----- データがない行について空行として出力しカンマを表示しない について
        '********** 空行の挿入
        ' 1)現在の行が最後の行でない かつ2)次の行にデータがない場合にのみ空行を挿入
        '今の行番号がデータが入っているセルの使用する行番号最大値より小さい間
        'If i < max_gyou Then
            'シートの次の行の空白以外のセルの個数（countA関数）が0・・・行のセルすべてが空セル
            If WorksheetFunction.CountA(csvSh.Rows(i)) = 0 Then
                'ファイル出力　csvValを出力せずに空白出力
                Print #csvNum, ""
            End If
        'End If
        '**********
    Next i
    
    ' ファイルを閉じる
    Close #csvNum
'----- csvファイルとして出力された
    MsgBox ("シートCSV変換 出力完了しました")
    '*** 書き込み工程 終了*** ◆◆◆
End Sub
