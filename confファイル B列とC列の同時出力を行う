'confファイル B列とC列の同時出力まで
'出力見本
'@type windows_eventlog2
'channels Application
'read_existing_events False
'Tag windows68.app

Sub CONF出力()
    '★step1 confシート
    Dim Sheet_conf As Worksheet
    Dim Sheet_set As Worksheet
    '設定シートとconfシートをセット
    Set Sheet_conf = ThisWorkbook.Worksheets("conf")
    Set Sheet_set = ThisWorkbook.Worksheets("設定")
    
    'もっとも幅の広いセルに合わせ列の幅を自動調整
    Sheet_conf.Range("B1:C1").EntireColumn.AutoFit
    Dim saveFileName As String '保存ファイル名
    Dim savePath As String '保存場所
    'confシートのC1セルから保存ファイル名を取得
    saveFileName = Sheet_conf.Range("C1").Value
    '設定シートのB1セルから保存場所を取得
    savePath = Sheet_set.Range("B1").Value
    
    '★step2 confシートのデータの読み込み ※B1セルを除く
    '★step2-1 列の使用済みセルの最大行番号を求める処理に用いる変数宣言
    '----- シートのセルを縦方向に見た場合　使用済みセルの最大行番号を求める
    '列の最終行を取得する必要がある
    ' 各列の最終行を取得
    Dim lastRow As Long
    lastRow = Sheet_conf.Cells(Sheet_conf.Rows.Count, 2).End(xlUp).Row
    'B列のデータ数
    Dim countRow_B As Integer '行数数える
    '見出し1行を除外したセル範囲B列選択
    Range("B1").Resize(Range("B1").CurrentRegion.Rows.Count - 1, Range("B1").Columns.Count).Offset(1, 0).Select
    countRow_B = Application.WorksheetFunction.CountA(Sheet_conf.Columns(2)) 'セル範囲の行数を数える
    MsgBox ("B列データ行数は" & countRow_B - 1) '←データ行数を取得
    
    'C列のデータ数
    Dim countRow_C As Integer '行数数える
    '見出し1行を除外したセル範囲C列選択
    Range("C1").Resize(Range("C1").CurrentRegion.Rows.Count - 1, Range("C1").Columns.Count).Offset(1, 0).Select
    countRow_C = Application.WorksheetFunction.CountA(Sheet_conf.Columns(3))  'セル範囲の行数を数える
    MsgBox ("C列データ行数は" & countRow_C - 1) '←データ行数を取得
    
    'データ欠落チェック B列とC列のデータ行数が一致すれば欠落なし
    If countRow_B - 1 = countRow_C - 1 Then
        MsgBox ("データ欠落なし")
    Else
        MsgBox ("データ欠落あり")
    End If
    
    '★step3 confシートのデータの読み込みとファイル出力
    '★step3-1　ファイル名を取得して名前を付けて保存
    '名前を付けて保存ダイアログボックス　C1セルに入力した場所に保存
    'わざわざ保存時にダイアログに入力しなくていいようにInitialFileNameにsaveFileNameを指定
    saveFileName = Application.GetSaveAsFilename(InitialFileName:=saveFileName, FileFilter:="configファイル,*.conf")
    '名前を付けて保存で保存を押した場合
    If Not IsNull(saveFileName) Then  '出力ファイルが指定された場合
        MsgBox ("ファイルが保存されました")
    Else '未入力またはキャンセル時
        Application.Goto Sheet_conf.Range("C1"), True  'C1セルにカーソルが合っている状態
        MsgBox ("confシートのB1セルに保存時のシート名を入力してやり直してください"), vbCritical  '警告メッセージアイコン
        Exit Sub
    End If
    
    '★step3-2　ファイル書き込み工程
    'B列とC列のデータをカンマで区切って、行ごとに出力する
'----- 上述のconfファイルをファイル番号FileNumとして開く
'----- ファイル出力においてOSでファイルを一元管理するための仕組み　ファイルを扱う際にファイル番号が他と重複しないようにFreeFile関数を使うことで未使用番号(空ファイル番号)を自動で取得する
    '★空のファイル番号取得
    Dim FileNum As Long
    FileNum = FreeFile
    
    '*** 書き込み工程 開始*** ◆◆◆
    Open saveFileName For Output As #FileNum
    'どうやったらB列とC列のデータを分割した状態で出力できるか
    Dim CellValB As String
    Dim CellValC As String
    'データの範囲
    For i = 2 To (countRow_B - 1) '行ごとに処理 '1行目はファイル名のため除外 2行目からデータ範囲まで C列も同じ回数なので割愛
        CellValB = Sheet_conf.Cells(i, 2).Value '2列目のデータ
        CellValC = Sheet_conf.Cells(i, 3).Value '3列目のデータ
        'B列とC列のデータをスペースで区切って出力
        Print #FileNum, CellValB & " " & CellValC
    Next i

    Close #FileNum
    '*** 書き込み工程 終了*** ◆◆◆
End Sub
